有修改 ：（因為花色 數字）
jin_douchidown.JPG ： 鬥志沉淪
wea_bigshield.JPG  ： 羅馬大盾
wea_blackshield.JPG： 燕尾盾

基本牌

basic_apple.JPG : 金蘋果
1.在自己的回合內為自己回復一點體力值。
2.在自己的回合外當任意一名角色處於頻死階段時對其使用，使其體力回復1

basic_dodge.JPG : 閃
當受到【殺】的攻擊時，可以使用一張【閃】來抵消【殺】的效果。

basic_kill.JPG : 殺
出牌階段，在攻擊範圍內對除自己以外的一名角色使用，效果是對該角色造成1點傷害。

錦囊牌

Card's Interface:
    CardGetable：可獲得牌的（從牌堆或從他人手上）
    CardRemovable: 可移除被使用的人的某張卡
    Recoverable：可回復體力的
    Harmful: 會扣體力的
    RoundSkipping: 會跳過被生效的人該回合

Card's Attribute:
    AreaEffective: 會影響到全體（輪流被影響）
    Targeting( !AreaEffective ): 效果只針對一個人
    SelfExclusive:  如為 Targeting 牌種，該張牌不能用在自己身上。
                    如為 AreaEffective 牌種，該張牌效果會跳過出牌者本身。
    
    EffectiveNow: 在這個回合就要進行判定、並產生效果
    EffectiveLater( !EffectiveNow ): 會先將該錦囊放在被指定的角色的判定區，等該角色回合開始才進行判定
    
    Conditional: 只在某些條件下生效
    Unconditional( !Conditional ): 無論如何一定生效

jin_battle.JPG ： 決鬥 （!AreaEffective, JudgedNow, Conditional）（Harmful）
出牌階段，對自己以外任意一名角色使用，由目標角色先開始，輪流打出一張【殺】。【決鬥】對首先不出【殺】的一方造成1點傷害，而另一方視為此傷害的來源。

in_crazybanquet.JPG ： 狂歡宴會（AreaEffective, JudgedNow, !Conditional）（Recoverable）
出牌階段，對所有角色使用。按照行動順序結算，所有受傷角色各回復1點體力。

jin_douchidown.JPG ：鬥志沉淪（!AreaEffective, !JudgedNow, Conditional）（RoundSkipping）
出牌階段，對除自己外，任意一名角色使用，將【鬥志沉淪】橫置於該角色的判定區裡。【鬥志沉淪】與該角色的判定階段開始結算，其效果是，該角色進行一次判定，除非判定結果為”武器牌“，否則跳過其出牌階段。

jin_getcard.JPG ： 點石成金（!AreaEffective, JudgedNow, !Conditional）（CardGetable）
出牌階段，對自己使用，摸兩張牌。

jin_thief.JPG ： 盜取（!AreaEffective, JudgedNow, !Conditional）（CardGetable, CardRemovable）
出牌階段，對除自己以外，選擇並獲得該角色的手牌（隨機選擇），裝備區或判定區裡的任意一張牌。

jin_throw.JPG ： 繳械（!AreaEffective, JudgedNow, !Conditional）（CardRemovable）
出牌階段，對除自己以外任意一名角色使用。棄掉該角色的手牌（隨機選擇）、裝備區或判定區裡的任意一張牌。

in_thouarrow.JPG ： 萬箭齊發（AreaEffective, JudgedNow, Conditional）（Harmful）
出牌階段，對自自己以外的所有角色使用，按行動順序結算，除非目標角色打出一張【閃】，否則該角色受到【萬劍齊發】對其造成的1點傷害。

jin_tushi.JPG ： 鐵騎突襲（AreaEffective, JudgedNow, Conditional）（Harmful）
出牌階段，對除自己以外的所有角色使用，按行動順序結算，除非目標角色打出一張【殺】，否則該角色受到【鐵騎突襲】對其造成的1點傷害。

jin_wuku.JPG ： 五穀豐登（AreaEffective, JudgedNow, !Conditional）（CardGetable）
出牌階段，對所有角色使用。從牌堆亮出等同於現存角色數量的牌，然後按行動順序結算，每名角色選擇並獲得其中的一張。



武器牌 

wea_bigshield.JPG ： 羅馬大盾
每當需要使用（或打出）一張【閃】時，可以進行一次判定，若結果為“殺”或“閃”，則視為使用（或打出）了一張【閃】。

wea_blackshield.JPG ：燕尾盾
每當需要使用（或打出）一張【閃】時，可以進行一次判定，若結果為“錦囊牌”，則視為使用（或打出）了一張【閃】。

wea_continue.JPG ： 連環弩
攻擊範圍1，出牌階段，你可以使用任意數量的【殺】。

wea_short.JPG ： 波斯短刀
攻擊範圍2， 鎖定技，每當你使用【殺】時，無視目標角色的防具。

wea_tensword.JPG ： 十字劍
攻擊範圍3，目標角色使用【閃】抵消使用【殺】的效果時，可以棄兩張牌，則【殺】依然造成傷害。 


該回合輪到自己時： 判定階段 -> 摸牌階段 -> 出牌階段 -> 棄牌階段

可以做的技能：
一、在出牌階段可以使用的技能（主動技能）
    制衡：出牌階段,你可以棄掉任意數量的牌,然後摸取等量的牌.每回合限用一次。
    據守：回合結束階段，你可以摸三張排，若如此做，跳過你下個回合。（使用後立即結束出牌階段，跳過棄牌階段）
    苦肉：出牌階段，你可以失去一點體力，然後摸兩張牌。每回合中，你可以多次使用苦肉。
    青囊：出牌階段，你可以主動棄掉一張手牌，令任一目標角色回復1點體力。每回合限用一次。
    突襲：摸牌階段，你可以放棄摸牌，然後從至多兩名（至少一名）角色的手牌裡各抽取一張牌。
    強襲：出牌階段，你可以自減1點體力或棄一張武器牌，然後對你攻擊範圍內的一名角色造成1點傷害。每回合限用一次。
二、被動技能
    咆哮：出牌階段，你可以使用任意數量的【殺】。 
    連營：每當你失去最後一張手牌時，可立即摸一張牌。 
    英姿：摸牌階段，你可以額外摸一張牌。
    狂骨：鎖定技，任何時候，你每對與你距離1以內的一名角色造成1點傷害，你回復1點體力。
    天妒：在你的判定牌生效時，你可以立即獲得它。
    空城：鎖定技，當你沒有手牌時，你不能成為【殺】或【決鬥】的目標。 
    
    
    
目前認為 Card 的使用方法：
    client 跟 server 都要先建立一個從 cardID 對應到某個 class 的對照表。我目前想到的實作方法是：一開始就把每張不同種的牌實體化一次，開一個 map 把他們的 cardID 對應到該實體。等到要解讀別人傳來的 cardID 時再利用此實體作為 copy constructor 的 source，來 new 一個自己要用的實體。

    一、發牌：由 server 給牌，利用 cardStack 建好的 method 來控管（cardStack 裡面應改為只放 cardID 即可，不必裝實體） 
         然後把該卡 cardID 單獨寄送給被發牌的人，被發牌的人再對照表中找到該牌，創一個新的實體再放到 handCards 中。
    
    二、從手牌出牌：client 端的手牌端應該要有自己的實體，當牌被『丟出』時，先看該牌的 category：
        1. BASIC(基本牌)：三張牌個別判定是否可以出、是否需要指定目標（閃不能直接出、桃不能指定目標、殺必須指定目標）
                         如需指定目標，則 giveEffectString() 就要傳入 target。如不需則傳 NULL
        2. SKILL(錦囊牌)：
            會有四個 boolean function 可用：   isNotTargeting();
                                             isSelfExclusive();
                                             isEffectiveNow();
                                             isConditional(); 
            當牌被丟出時，先檢查其是否 isNotTargeting() ? 如果是（範圍技、或者自我抽牌），就可以直接 giveEffectString(this, NULL);
            如果不是，就要求 Player 指定一個範圍內的對象，且如果該牌 isSelfExclusive() 就不能指定自己。
                    
        3. EQUIPMENT(裝備牌)： 可用 isSheild() 來判別該張牌為防具或武器。
            若為防具，則把該牌放置到角色的防具區，若防具區已滿，採用 LRU policy 進行替換。武器區同理。
            ...好啦防具武器區應該都只有一格的空間。
            
        若順利把牌丟出，則將 effectString() 回傳字串傳給 ServerUtility 來廣播。 (effectString() 的 giver 永遠要傳入出牌者自己)
    
    三、產生效果：接收到 server 的廣播之後，先把廣播來的 cardID 轉換成實體，就能知道這是哪張牌。
        1. BASIC(基本牌)：一樣三種牌各自判斷。
        2. SKILL(錦囊牌)：如果該牌為 isNotTargeting()（範圍技、或者自我抽牌），就把 server 傳來的 giver name 讀進來，
               (a) 若該牌為自我抽牌記，則只有 giver 本人可以呼叫 takeEffectString(this) （其實可以提早到出牌後跳過 giveEffectString，直接 takeEffectString）
               (b) 若該牌為範圍記---- 甲、if isSelfExclusive() == true , 只有 giver 本人可以不用呼叫 takeEffectString
                                    乙、if isSelfExclusive() == false, 則每個人都要呼叫 takeEffectString
        
        拿到 takeEffectString 的回傳字串之後，要傳給 server，server 再廣播出去有誰要扣血、加血、少牌、多牌等等。
        （這個字串本身就是說明：哪個角色的哪個數值發生了什麼變化）
        
        不過在所有呼叫 takeEffectString 之前，都要看該牌的 isConditional()----(a)true: 直接呼叫 takeEffectString，然後傳給 server
                                                                         (b)false: 要進行各種判斷（這應該不好寫><）